//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfWForms.CategoryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryServiceReference.ICategory")]
    public interface ICategory {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategoryID", ReplyAction="http://tempuri.org/ICategory/GetCategoryIDResponse")]
        System.Nullable<int> GetCategoryID(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategoryID", ReplyAction="http://tempuri.org/ICategory/GetCategoryIDResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetCategoryIDAsync(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategoryName", ReplyAction="http://tempuri.org/ICategory/GetCategoryNameResponse")]
        string GetCategoryName(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategoryName", ReplyAction="http://tempuri.org/ICategory/GetCategoryNameResponse")]
        System.Threading.Tasks.Task<string> GetCategoryNameAsync(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/AddNewCategory", ReplyAction="http://tempuri.org/ICategory/AddNewCategoryResponse")]
        void AddNewCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/AddNewCategory", ReplyAction="http://tempuri.org/ICategory/AddNewCategoryResponse")]
        System.Threading.Tasks.Task AddNewCategoryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryChannel : WcfWForms.CategoryServiceReference.ICategory, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryClient : System.ServiceModel.ClientBase<WcfWForms.CategoryServiceReference.ICategory>, WcfWForms.CategoryServiceReference.ICategory {
        
        public CategoryClient() {
        }
        
        public CategoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<int> GetCategoryID(int categoryID) {
            return base.Channel.GetCategoryID(categoryID);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetCategoryIDAsync(int categoryID) {
            return base.Channel.GetCategoryIDAsync(categoryID);
        }
        
        public string GetCategoryName(int categoryID) {
            return base.Channel.GetCategoryName(categoryID);
        }
        
        public System.Threading.Tasks.Task<string> GetCategoryNameAsync(int categoryID) {
            return base.Channel.GetCategoryNameAsync(categoryID);
        }
        
        public void AddNewCategory() {
            base.Channel.AddNewCategory();
        }
        
        public System.Threading.Tasks.Task AddNewCategoryAsync() {
            return base.Channel.AddNewCategoryAsync();
        }
    }
}
